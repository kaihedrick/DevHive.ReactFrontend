name: Deploy React App to AWS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_REGION:     ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # If your React app is in a subfolder, set working-directory: frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci || npm install --legacy-peer-deps

      - name: Build
        run: CI=false npm run build

      # Sync everything except index.html to s3://<bucket>/frontend/ with long cache
      - name: Sync static assets
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: >-
            --delete
            --exclude "index.html"
            --cache-control "public,max-age=31536000,immutable"
        env:
          SOURCE_DIR: build
          DEST_DIR: frontend
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      # Upload index.html separately with no-cache so SPA updates show immediately
      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp build/index.html "s3://$AWS_S3_BUCKET/frontend/index.html" \
            --cache-control "no-cache,no-store,must-revalidate" \
            --content-type "text/html; charset=utf-8" \
            --region "$AWS_REGION"

      # Invalidate CloudFront so users get the fresh HTML
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.DIST_ID }}
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
