/* InputField.module.css - Scoped styles for InputField component */

.inputField {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.label {
  font-size: var(--font-size-sm);
  color: var(--muted);
  font-weight: 500;
}

.controlWrap {
  position: relative;
  display: flex;
  align-items: center;
}

.control {
  width: 100%;
  height: 44px;
  padding: 0 var(--space-4);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background: var(--bg2);
  color: var(--text);
  font-size: var(--font-size-base);
  transition: border-color var(--transition-normal), box-shadow var(--transition-normal);
}

.control:focus {
  outline: none;
  border-color: var(--focus);
  box-shadow: 0 0 0 3px rgba(110, 168, 254, 0.1);
}

.leftIcon {
  position: absolute;
  left: var(--space-3);
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--muted);
  font-size: var(--font-size-base);
}

.rightIcon {
  position: absolute;
  right: var(--space-3);
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--muted);
  font-size: var(--font-size-base);
}

/* If you use icons, add extra padding using a className override or extend here */
.control.hasLeftIcon {
  padding-left: calc(var(--space-4) + 1.5rem);
}

.control.hasRightIcon {
  padding-right: calc(var(--space-4) + 1.5rem);
}

.hint {
  font-size: var(--font-size-xs);
  color: var(--muted);
}

.error {
  font-size: var(--font-size-xs);
  color: var(--danger);
}

.is-error .control {
  border-color: var(--danger);
}

.is-error .control:focus {
  border-color: var(--danger);
  box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.1);
}
